
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"E:\SEMESTER 4\kemanan informasi\KI program\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("800x500")
window.configure(bg = "#B8B18E")

def xor_cipher(text, key):
    text_bytes = [ord(char) for char in text]
    key_bytes = [ord(char) for char in key]
    encrypted_bytes = [text_byte ^ key_bytes[i % len(key_bytes)] for i, text_byte in enumerate(text_bytes)]
    encrypted_text = ''.join([format(byte, '02X') for byte in encrypted_bytes])
    return encrypted_text


def xor_decipher(encrypted_text, key):
    encrypted_bytes = [int(encrypted_text[i:i + 2], 16) for i in range(0, len(encrypted_text), 2)]
    key_bytes = [ord(char) for char in key]
    decrypted_bytes = [encrypted_byte ^ key_bytes[i % len(key_bytes)] for i, encrypted_byte in enumerate(encrypted_bytes)]
    decrypted_text = ''.join([chr(byte) for byte in decrypted_bytes])
    return decrypted_text

def encrypt_text():
    plaintext = entry_1.get("1.0", "end-1c") # Mendapatkan teks dari entry 1
    key = "121212"  # Kunci yang digunakan untuk enkripsi
    encrypted_text = xor_cipher(plaintext, key) # Enkripsi teks
    entry_2.delete("1.0", "end") # Hapus teks sebelumnya dari entry 2
    entry_2.insert("1.0", encrypted_text) # Masukkan teks terenkripsi ke entry 2

def decrypt_text():
    encrypted_text = entry_1.get("1.0", "end-1c") # Mendapatkan teks terenkripsi dari entry 1
    key = "121212"  # Kunci yang digunakan untuk dekripsi
    decrypted_text = xor_decipher(encrypted_text, key) # Dekripsi teks
    entry_2.delete("1.0", "end") # Hapus teks sebelumnya dari entry 2
    entry_2.insert("1.0", decrypted_text) # Masukkan teks terdekripsi ke entry 2


canvas = Canvas(
    window,
    bg = "#B8B18E",
    height = 500,
    width = 800,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    416.0,
    133.0,
    image=entry_image_1
)
entry_1 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=165.0,
    y=76.0,
    width=502.0,
    height=112.0
)

entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    416.0,
    307.0,
    image=entry_image_2
)
entry_2 = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=165.0,
    y=250.0,
    width=502.0,
    height=112.0
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    237.0,
    48.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    237.0,
    220.0,
    image=image_image_2
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,command=encrypt_text,
    relief="flat"
)
button_1.place(
    x=191.0,
    y=398.0,
    width=136.0,
    height=38.0
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,command=decrypt_text,
    relief="flat"
)
button_2.place(
    x=524.0,
    y=398.0,
    width=136.0,
    height=38.0
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    57.0,
    37.0,
    image=image_image_3
)
window.resizable(False, False)
window.mainloop()
